/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as WorkflowsIndexImport } from './routes/workflows/index'
import { Route as SocialmediaIndexImport } from './routes/social_media/index'
import { Route as BlogsIndexImport } from './routes/blogs/index'
import { Route as WorkflowsCreateImport } from './routes/workflows/create'
import { Route as WorkflowsWorkflowIdImport } from './routes/workflows/$workflowId'
import { Route as SocialmediaSocialmediaIdImport } from './routes/social_media/$social_mediaId'
import { Route as BlogsBlogIdImport } from './routes/blogs/$blogId'

// Create/Update Routes

const WorkflowsIndexRoute = WorkflowsIndexImport.update({
  id: '/workflows/',
  path: '/workflows/',
  getParentRoute: () => rootRoute,
} as any)

const SocialmediaIndexRoute = SocialmediaIndexImport.update({
  id: '/social_media/',
  path: '/social_media/',
  getParentRoute: () => rootRoute,
} as any)

const BlogsIndexRoute = BlogsIndexImport.update({
  id: '/blogs/',
  path: '/blogs/',
  getParentRoute: () => rootRoute,
} as any)

const WorkflowsCreateRoute = WorkflowsCreateImport.update({
  id: '/workflows/create',
  path: '/workflows/create',
  getParentRoute: () => rootRoute,
} as any)

const WorkflowsWorkflowIdRoute = WorkflowsWorkflowIdImport.update({
  id: '/workflows/$workflowId',
  path: '/workflows/$workflowId',
  getParentRoute: () => rootRoute,
} as any)

const SocialmediaSocialmediaIdRoute = SocialmediaSocialmediaIdImport.update({
  id: '/social_media/$social_mediaId',
  path: '/social_media/$social_mediaId',
  getParentRoute: () => rootRoute,
} as any)

const BlogsBlogIdRoute = BlogsBlogIdImport.update({
  id: '/blogs/$blogId',
  path: '/blogs/$blogId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/blogs/$blogId': {
      id: '/blogs/$blogId'
      path: '/blogs/$blogId'
      fullPath: '/blogs/$blogId'
      preLoaderRoute: typeof BlogsBlogIdImport
      parentRoute: typeof rootRoute
    }
    '/social_media/$social_mediaId': {
      id: '/social_media/$social_mediaId'
      path: '/social_media/$social_mediaId'
      fullPath: '/social_media/$social_mediaId'
      preLoaderRoute: typeof SocialmediaSocialmediaIdImport
      parentRoute: typeof rootRoute
    }
    '/workflows/$workflowId': {
      id: '/workflows/$workflowId'
      path: '/workflows/$workflowId'
      fullPath: '/workflows/$workflowId'
      preLoaderRoute: typeof WorkflowsWorkflowIdImport
      parentRoute: typeof rootRoute
    }
    '/workflows/create': {
      id: '/workflows/create'
      path: '/workflows/create'
      fullPath: '/workflows/create'
      preLoaderRoute: typeof WorkflowsCreateImport
      parentRoute: typeof rootRoute
    }
    '/blogs/': {
      id: '/blogs/'
      path: '/blogs'
      fullPath: '/blogs'
      preLoaderRoute: typeof BlogsIndexImport
      parentRoute: typeof rootRoute
    }
    '/social_media/': {
      id: '/social_media/'
      path: '/social_media'
      fullPath: '/social_media'
      preLoaderRoute: typeof SocialmediaIndexImport
      parentRoute: typeof rootRoute
    }
    '/workflows/': {
      id: '/workflows/'
      path: '/workflows'
      fullPath: '/workflows'
      preLoaderRoute: typeof WorkflowsIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/blogs/$blogId': typeof BlogsBlogIdRoute
  '/social_media/$social_mediaId': typeof SocialmediaSocialmediaIdRoute
  '/workflows/$workflowId': typeof WorkflowsWorkflowIdRoute
  '/workflows/create': typeof WorkflowsCreateRoute
  '/blogs': typeof BlogsIndexRoute
  '/social_media': typeof SocialmediaIndexRoute
  '/workflows': typeof WorkflowsIndexRoute
}

export interface FileRoutesByTo {
  '/blogs/$blogId': typeof BlogsBlogIdRoute
  '/social_media/$social_mediaId': typeof SocialmediaSocialmediaIdRoute
  '/workflows/$workflowId': typeof WorkflowsWorkflowIdRoute
  '/workflows/create': typeof WorkflowsCreateRoute
  '/blogs': typeof BlogsIndexRoute
  '/social_media': typeof SocialmediaIndexRoute
  '/workflows': typeof WorkflowsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/blogs/$blogId': typeof BlogsBlogIdRoute
  '/social_media/$social_mediaId': typeof SocialmediaSocialmediaIdRoute
  '/workflows/$workflowId': typeof WorkflowsWorkflowIdRoute
  '/workflows/create': typeof WorkflowsCreateRoute
  '/blogs/': typeof BlogsIndexRoute
  '/social_media/': typeof SocialmediaIndexRoute
  '/workflows/': typeof WorkflowsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/blogs/$blogId'
    | '/social_media/$social_mediaId'
    | '/workflows/$workflowId'
    | '/workflows/create'
    | '/blogs'
    | '/social_media'
    | '/workflows'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/blogs/$blogId'
    | '/social_media/$social_mediaId'
    | '/workflows/$workflowId'
    | '/workflows/create'
    | '/blogs'
    | '/social_media'
    | '/workflows'
  id:
    | '__root__'
    | '/blogs/$blogId'
    | '/social_media/$social_mediaId'
    | '/workflows/$workflowId'
    | '/workflows/create'
    | '/blogs/'
    | '/social_media/'
    | '/workflows/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  BlogsBlogIdRoute: typeof BlogsBlogIdRoute
  SocialmediaSocialmediaIdRoute: typeof SocialmediaSocialmediaIdRoute
  WorkflowsWorkflowIdRoute: typeof WorkflowsWorkflowIdRoute
  WorkflowsCreateRoute: typeof WorkflowsCreateRoute
  BlogsIndexRoute: typeof BlogsIndexRoute
  SocialmediaIndexRoute: typeof SocialmediaIndexRoute
  WorkflowsIndexRoute: typeof WorkflowsIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  BlogsBlogIdRoute: BlogsBlogIdRoute,
  SocialmediaSocialmediaIdRoute: SocialmediaSocialmediaIdRoute,
  WorkflowsWorkflowIdRoute: WorkflowsWorkflowIdRoute,
  WorkflowsCreateRoute: WorkflowsCreateRoute,
  BlogsIndexRoute: BlogsIndexRoute,
  SocialmediaIndexRoute: SocialmediaIndexRoute,
  WorkflowsIndexRoute: WorkflowsIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/blogs/$blogId",
        "/social_media/$social_mediaId",
        "/workflows/$workflowId",
        "/workflows/create",
        "/blogs/",
        "/social_media/",
        "/workflows/"
      ]
    },
    "/blogs/$blogId": {
      "filePath": "blogs/$blogId.tsx"
    },
    "/social_media/$social_mediaId": {
      "filePath": "social_media/$social_mediaId.tsx"
    },
    "/workflows/$workflowId": {
      "filePath": "workflows/$workflowId.tsx"
    },
    "/workflows/create": {
      "filePath": "workflows/create.tsx"
    },
    "/blogs/": {
      "filePath": "blogs/index.tsx"
    },
    "/social_media/": {
      "filePath": "social_media/index.tsx"
    },
    "/workflows/": {
      "filePath": "workflows/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
